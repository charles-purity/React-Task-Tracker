[{"C:\\Users\\USER\\react-task-tracker\\src\\index.js":"1","C:\\Users\\USER\\react-task-tracker\\src\\App.js":"2","C:\\Users\\USER\\react-task-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\react-task-tracker\\src\\components\\Header.js":"4","C:\\Users\\USER\\react-task-tracker\\src\\components\\Footer.js":"5","C:\\Users\\USER\\react-task-tracker\\src\\components\\Tasks.js":"6","C:\\Users\\USER\\react-task-tracker\\src\\components\\AddTask.js":"7","C:\\Users\\USER\\react-task-tracker\\src\\components\\Task.js":"8","C:\\Users\\USER\\react-task-tracker\\src\\components\\Button.js":"9"},{"size":535,"mtime":1683211216611,"results":"10","hashOfConfig":"11"},{"size":1837,"mtime":1683571221296,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1683211227930,"results":"13","hashOfConfig":"11"},{"size":518,"mtime":1683555561057,"results":"14","hashOfConfig":"11"},{"size":197,"mtime":1683737705632,"results":"15","hashOfConfig":"11"},{"size":325,"mtime":1683559141478,"results":"16","hashOfConfig":"11"},{"size":1512,"mtime":1683418878464,"results":"17","hashOfConfig":"11"},{"size":489,"mtime":1683555968732,"results":"18","hashOfConfig":"11"},{"size":458,"mtime":1683390894598,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s3cwz",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\react-task-tracker\\src\\index.js",[],"C:\\Users\\USER\\react-task-tracker\\src\\App.js",["39"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState\n  (false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    \n    return data\n  } \n\n//add task\n\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n  // const id = Math.floor(Math.random() *\n  // 10000) + 1\n  // const newTask = { id, ...task }\n  // setTasks([...tasks, newTask])\n}\n\n// delete task\n\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE',\n  })\n  setTasks(tasks.filter((task) => task.id !==id ))\n}\n\n// Toggle reminder\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id  === id\n    ? { ...task, reminder: task.reminder } : task))\n}\n\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask} />  \n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} \n      onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : ('No Tasks To Show')} \n\n      <footer />\n      \n    </div> \n  ); \n}\n   \nexport default App\n","C:\\Users\\USER\\react-task-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\react-task-tracker\\src\\components\\Header.js",[],"C:\\Users\\USER\\react-task-tracker\\src\\components\\Footer.js",[],"C:\\Users\\USER\\react-task-tracker\\src\\components\\Tasks.js",[],"C:\\Users\\USER\\react-task-tracker\\src\\components\\AddTask.js",[],"C:\\Users\\USER\\react-task-tracker\\src\\components\\Task.js",[],"C:\\Users\\USER\\react-task-tracker\\src\\components\\Button.js",[],{"ruleId":"40","severity":1,"message":"41","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":14},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar"]